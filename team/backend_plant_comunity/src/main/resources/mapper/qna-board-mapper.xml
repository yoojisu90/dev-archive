<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  QNA(1:1 문의) SQL Mapper XML 파일
  namespace에는 xml파일과 연결할 Mapper interface 파일명을 패키지를 포함하여 작성
-->
<mapper namespace="com.green.backend_plant_comunity.board.mapper.QnaBoardMapper">
    <resultMap id="qnaBoard" type="com.green.backend_plant_comunity.board.dto.QnaBoardDTO">
        <id column="QNA_NUM" property="qnaNum" />
        <result column="CATE_NUM" property="cateNum" />
        <result column="TITLE" property="title" />
        <result column="CONTENT" property="content" />
        <result column="MEM_ID" property="memId" />
        <result column="QNA_STATUS" property="qnaStatus" />
        <result column="ANSWER_CONTENT" property="answerContent" />
        <result column="ANSWER_DATE" property="answerDate" />
        <result column="ADMIN_ID" property="adminId" />
        <result column="CREATE_DATE" property="createDate" />
        <association property="qnaCategory" javaType="com.green.backend_plant_comunity.board.dto.QnaCategoryDTO">
            <id column="CATE_NUM" property="cateNum" />
            <result column="CATE_NAME" property="cateName" />
            <result column="CATE_ORDER" property="cateOrder" />
            <result column="IS_ACTIVE" property="isActive" />
        </association>
    </resultMap>

    <!--
      문의 목록 조회 (특정 회원의 문의 내역)
      마이페이지에서 본인의 문의 내역을 확인할 때 사용
      #{memId}: 로그인한 회원의 ID
    -->
    <select id="getMyQnaList" resultMap="qnaBoard">
        SELECT 
            Q.QNA_NUM
            , Q.CATE_NUM
            , C.CATE_NAME
            , C.CATE_ORDER
            , C.IS_ACTIVE
            , Q.TITLE
            , Q.MEM_ID
            , Q.QNA_STATUS
            , Q.CREATE_DATE
        FROM
            QNA Q
        LEFT JOIN QNA_CATEGORY C ON Q.CATE_NUM = C.CATE_NUM
        WHERE
            Q.MEM_ID = #{memId}
        ORDER BY
            Q.CREATE_DATE DESC
    </select>

    <!--
      문의 상세 조회
      특정 문의글의 모든 정보를 조회 (답변 포함)
      #{qnaNum}: 조회할 문의 번호
    -->
    <select id="getQnaDetail" resultMap="qnaBoard">
        SELECT
            Q.QNA_NUM
            , Q.CATE_NUM
            , C.CATE_NAME
            , C.CATE_ORDER
            , C.IS_ACTIVE
            , Q.TITLE
            , Q.CONTENT
            , Q.MEM_ID
            , Q.QNA_STATUS
            , Q.ANSWER_CONTENT
            , Q.ANSWER_DATE
            , Q.ADMIN_ID
            , Q.CREATE_DATE
        FROM
            QNA Q
        LEFT JOIN QNA_CATEGORY C ON Q.CATE_NUM = C.CATE_NUM
        WHERE
            Q.QNA_NUM = #{qnaNum}
    </select>

    <!--
      문의 등록
      회원이 새로운 1:1 문의를 작성할 때 사용
      QNA_NUM은 AUTO_INCREMENT이므로 INSERT 시 제외
      QNA_STATUS와 CREATE_DATE는 DEFAULT 값 자동 설정
    -->
    <insert id="insertQna">
        INSERT INTO QNA (
            CATE_NUM
            , TITLE
            , CONTENT
            , MEM_ID
        ) VALUES (
              #{cateNum}
            , #{title}
            , #{content}
            , #{memId}
        )
    </insert>

    <!--
      문의 글 수정
      작성자 본인만 수정 가능
      답변 전(QNA_STATUS = '답변대기')일 때만 수정 가능
      #{qnaNum}: 수정할 문의 번호
      #{cateNum}: 변경할 카테고리 번호
      #{title}: 변경할 제목
      #{content}: 변경할 내용
      #{memId}: 작성자 ID (본인 확인용)
    -->
    <update id="updateQna">
        UPDATE QNA
        SET
              CATE_NUM = #{cateNum}
            , TITLE = #{title}
            , CONTENT = #{content}
        WHERE QNA_NUM = #{qnaNum}
          AND MEM_ID = #{memId}
          AND QNA_STATUS = '답변대기'
    </update>

    <!--
      문의 글 삭제
      작성자 본인만 삭제 가능
      #{qnaNum}: 삭제할 문의 번호
      #{memId}: 작성자 ID (본인 확인용)
    -->
    <delete id="deleteQna">
        DELETE FROM QNA
        WHERE QNA_NUM = #{qnaNum}
          AND MEM_ID = #{memId}
    </delete>

    <!-- 관리자 답변 등록 (기존) -->
    <update id="insertAnswer">
        UPDATE QNA
        SET
        ANSWER_CONTENT = #{answerContent},
        ANSWER_DATE = NOW(),
        ADMIN_ID = #{adminId},
        QNA_STATUS = '답변완료'
        WHERE QNA_NUM = #{qnaNum}
    </update>


    <!--    카테고리 num 가지고 오는 쿼리-->
    <select id="selectQnaCategories" resultType="com.green.backend_plant_comunity.board.dto.QnaCategoryDTO">
        SELECT
        CATE_NUM as cateNum,
        CATE_NAME as cateName,
        CATE_ORDER as cateOrder,
        IS_ACTIVE as isActive
        FROM QNA_CATEGORY
        WHERE IS_ACTIVE = TRUE
        ORDER BY CATE_ORDER ASC, CATE_NUM ASC
    </select>

    <!-- 관리자용 문의사항 전체 조회 (필터링 포함) -->
    <select id="getAdminQnaList" resultMap="qnaBoard">
        SELECT
        QNA_NUM,
        CATE_NUM,
        TITLE,
        CONTENT,
        MEM_ID,
        QNA_STATUS,
        ANSWER_CONTENT,
        ANSWER_DATE,
        ADMIN_ID,
        CREATE_DATE
        FROM QNA
        <where>
            <if test="cateNum != null">
                AND CATE_NUM = #{cateNum}
            </if>
            <if test="memId != null and memId != ''">
                AND MEM_ID LIKE CONCAT('%', #{memId}, '%')
            </if>
            <if test="qnaStatus != null and qnaStatus != ''">
                AND QNA_STATUS = #{qnaStatus}
            </if>
        </where>
        ORDER BY
        CASE WHEN QNA_STATUS = '답변대기' THEN 1
        WHEN QNA_STATUS = '답변중' THEN 2
        WHEN QNA_STATUS = '답변완료' THEN 3
        ELSE 4 END,
        CREATE_DATE DESC
    </select>

    <!-- 관리자 답변 등록 및 상태 변경 -->
    <update id="insertAdminAnswer">
        UPDATE QNA
        SET
        ANSWER_CONTENT = #{answerContent},
        ANSWER_DATE = NOW(),
        ADMIN_ID = #{adminId},
        QNA_STATUS = '답변완료'
        WHERE QNA_NUM = #{qnaNum}
    </update>

    <!-- 문의사항 답변 상태 변경 -->
    <update id="updateQnaStatus">
        UPDATE QNA
        SET QNA_STATUS = #{qnaStatus}
        WHERE QNA_NUM = #{qnaNum}
    </update>

    <!-- 카테고리별 문의사항 통계 조회 -->
    <select id="getQnaStatsByCategory" resultType="map">
        SELECT
        CATE_NUM as categoryNum,
        COUNT(*) as count
        FROM QNA
        GROUP BY CATE_NUM
        ORDER BY CATE_NUM
    </select>

    <!-- 상태별 문의사항 통계 조회 -->
    <select id="getQnaStatsByStatus" resultType="map">
        SELECT
        QNA_STATUS as status,
        COUNT(*) as count
        FROM QNA
        GROUP BY QNA_STATUS
        ORDER BY
        CASE WHEN QNA_STATUS = '답변대기' THEN 1
        WHEN QNA_STATUS = '답변중' THEN 2
        WHEN QNA_STATUS = '답변완료' THEN 3
        ELSE 4 END
    </select>

    <!-- 전체 문의사항 수 조회 (필터링 포함) -->
    <select id="getQnaCount" resultType="int">
        SELECT COUNT(*)
        FROM QNA
        <where>
            <if test="cateNum != null">
                AND CATE_NUM = #{cateNum}
            </if>
            <if test="memId != null and memId != ''">
                AND MEM_ID LIKE CONCAT('%', #{memId}, '%')
            </if>
            <if test="qnaStatus != null and qnaStatus != ''">
                AND QNA_STATUS = #{qnaStatus}
            </if>
        </where>

    </select>

</mapper>

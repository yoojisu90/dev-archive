<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!-- namespace에는 xml파일과 연결할 Mapper interface 파일명을 패키지를 포함하여 적어주세요 -->
<mapper namespace="com.green.backend_shop.buy.mapper.BuyMapper">
	<resultMap id="buy" type="com.green.backend_shop.buy.dto.BuyDTO">
        <id      column="BUY_NUM"   property="buyNum"/>
        <result  column="BOOK_NUM"  property="bookNum"/>
        <result  column="MEM_ID"    property="memId"/>
        <result  column="BUY_DATE"  property="buyDate"/>
        <result  column="BUY_CNT"   property="buyCnt"/>
        <result  column="ORDER_NUM"   property="orderNum"/>
        <result  column="TOTAL_PRICE"   property="totalPrice"/>
        <association property="bookDTO" resultMap="com.green.backend_shop.book.mapper.BookMapper.book"/>
    </resultMap>

    <resultMap id="buyDTOForAdmin" type="com.green.backend_shop.buy.dto.BuyDTOForAdmin">
        <id      column="ORDER_NUM" property="orderNum"/>
        <result  column="MEM_ID"    property="memId"/>
        <result  column="PRICE"     property="price"/>
        <result  column="BUY_DATE"  property="buyDate"/>
        <result  column="TITLE"     property="title"/>
    </resultMap>

    <resultMap id="recentDate" type="com.green.backend_shop.buy.dto.RecentDateDTO">
        <result column="RECENT_DATE" property="recentDate"/>
    </resultMap>

    <resultMap id="totalPrice" type="com.green.backend_shop.buy.dto.TotalPriceDTO">
        <result column="TOTAL_PRICE" property="totalPrice"/>
    </resultMap>

    <!--도서 상제 페이지 - 구매하기-->
    <insert id="insertBuy">
        INSERT INTO SHOP_BUY(
            BOOK_NUM,
            MEM_ID,
            BUY_CNT,
            ORDER_NUM
        ) VALUES(
            #{bookNum},
            #{memId},
            #{buyCnt},
            (SELECT IFNULL(MAX(ORDER_NUM) , 0) + 1 FROM SHOP_BUY)
        )
    </insert>

    <!--장바구니 페이지 - 구매하기-->
    <insert id="buyAll">
        INSERT INTO SHOP_BUY (BOOK_NUM, MEM_ID, BUY_CNT, ORDER_NUM)
        VALUES
        <foreach collection="cartNumList" item="cartNum" separator=",">
        (
            (SELECT BOOK_NUM FROM shop_cart WHERE CART_NUM = #{cartNum}),
            #{memId},
            (SELECT CART_CNT FROM shop_cart WHERE CART_NUM = #{cartNum}),
            (SELECT IFNULL(MAX(ORDER_NUM) , 0) + 1 FROM SHOP_BUY)
        )
        </foreach>
    </insert>

    <!--관리자 페이지 - 구매 이력 조회-->
    <select id="getBuyListForAdmin" resultMap="buyDTOForAdmin">
        SELECT
            ORDER_NUM,
            MAX(MEM_ID) MEM_ID,
            SUM((SELECT PRICE FROM book WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT) PRICE,
            MAX(BUY_DATE) BUY_DATE,
            CASE COUNT(ORDER_NUM)-1
                WHEN 0 THEN MAX((SELECT TITLE
                                FROM book
                                WHERE BOOK_NUM = shop_buy.BOOK_NUM))
                ELSE CONCAT(MAX((SELECT TITLE
                                FROM book WHERE BOOK_NUM = shop_buy.BOOK_NUM)),
                                ' 외 ',
                                COUNT(ORDER_NUM)-1,
                                '건')
                END TITLE
        FROM shop_buy
        WHERE 1 = 1
        <if test=' orderNum != null and !orderNum.equals("") '>
            AND ORDER_NUM = #{orderNum}
        </if>
        <if test=' memId != null and !memId.equals("") '>
            AND MEM_ID LIKE CONCAT('%', #{memId}, '%')
        </if>
        <if test=' fromDate != null and !fromDate.equals("") '>
            AND BUY_DATE &gt;= #{fromDate}
        </if>
        <if test=' toDate != null and !toDate.equals("") '>
            AND BUY_DATE &lt;= ADDDATE(#{toDate},1)
        </if>
        GROUP BY ORDER_NUM
        ORDER BY BUY_DATE DESC
    </select>

    <!--구매 내역 상세 조회-->
    <select id="getBuyDetail" resultMap="buy">
        SELECT
            BUY_NUM,
            BUY_CNT,
            TITLE,
            PRICE,
            PRICE * BUY_CNT AS TOTAL_PRICE,
            ATTACHED_IMG_NAME
        FROM shop_buy S INNER JOIN book B
        ON S.BOOK_NUM = B.BOOK_NUM
        INNER JOIN book_img I
        ON S.BOOK_NUM = I.BOOK_NUM
        WHERE IS_MAIN = 'Y'
        AND ORDER_NUM = #{orderNum}
    </select>

    <!--최근 10일 날짜 조회-->
    <select id="getRecentDate" resultMap="recentDate">
        SELECT
            ADDDATE(CURRENT_DATE(), -9) AS RECENT_DATE
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -8)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -7)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -6)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -5)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -4)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -3)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -2)
            UNION ALL
            SELECT ADDDATE(CURRENT_DATE(), -1)
            UNION ALL
            SELECT CURRENT_DATE()
    </select>

    <!--최근 10일간 매출 조회-->
    <select id="getTotalPrice" resultMap="totalPrice">
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0) AS TOTAL_PRICE
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -9)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -8)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -7)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -6)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -5)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -4)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -3)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -2)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = ADDDATE(CURRENT_DATE(), -1)
        UNION ALL
        SELECT
            IFNULL(SUM((SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = shop_buy.BOOK_NUM) * BUY_CNT), 0)
            FROM shop_buy
            WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') = CURRENT_DATE()
    </select>



</mapper>
































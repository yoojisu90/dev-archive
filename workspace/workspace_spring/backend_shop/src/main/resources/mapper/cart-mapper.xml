<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!-- namespace에는 xml파일과 연결할 Mapper interface 파일명을 패키지를 포함하여 적어주세요 -->
<mapper namespace="com.green.backend_shop.cart.mapper.CartMapper">
	<resultMap id="cart" type="com.green.backend_shop.cart.dto.CartDTO">
        <id          column="CART_NUM"      property="cartNum"/>
        <result      column="CART_CNT"      property="cartCnt"/>
        <result      column="TOTAL_PRICE"   property="totalPrice"/>
        <result      column="CART_DATE"     property="cartDate"/>
        <result      column="BOOK_NUM"      property="bookNum"/>
        <result      column="MEM_ID"        property="memId"/>
        <association property="bookDTO"     resultMap="com.green.backend_shop.book.mapper.BookMapper.book"/>
    </resultMap>

    <!--장바구니 목록 조회-->
    <select id="getCartList" resultMap="cart">
        SELECT
            TITLE,
            PRICE,
            CART_NUM,
            CART_CNT,
            TOTAL_PRICE,
            CART_DATE,
            C.BOOK_NUM,
            ATTACHED_IMG_NAME
        FROM shop_cart C INNER JOIN book B
        ON C.BOOK_NUM = B.BOOK_NUM
        INNER JOIN BOOK_IMG I
        ON C.BOOK_NUM = I.BOOK_NUM
        WHERE MEM_ID = #{memId}
        AND IS_MAIN = 'Y'
        ORDER BY CART_DATE DESC
    </select>

    <!--장바구니 등록-->
    <insert id="addCart">
        INSERT INTO SHOP_CART(
            BOOK_NUM,
            CART_CNT,
            MEM_ID,
            TOTAL_PRICE
        ) VALUES(
            #{bookNum},
            #{cartCnt},
            #{memId},
            (SELECT PRICE
            FROM BOOK
            WHERE BOOK_NUM = #{bookNum}) * #{cartCnt}
        )
    </insert>

    <!--장바구니에 등록하려는 상품이 현재 등록되어 있는지 확인-->
    <select id="getCartNum" resultType="String">
        SELECT MEM_ID
        FROM shop_cart
        WHERE BOOK_NUM = #{bookNum}
        AND MEM_ID = #{memId}
    </select>

    <!--장바구니 수량 변경(같은 상품 장바구니 중복 저장 시 실행)-->
    <update id="updateCartCnt">
        UPDATE SHOP_CART
        SET
            CART_CNT= CART_CNT + #{cartCnt},
            TOTAL_PRICE = ( SELECT PRICE
                            FROM BOOK
                            WHERE BOOK_NUM = #{bookNum}) * CART_CNT
        WHERE MEM_ID = #{memId}
        AND BOOK_NUM = #{bookNum}
    </update>

    <!--장바구니 삭제-->
    <delete id="deleteCart">
        DELETE FROM SHOP_CART
        WHERE CART_NUM = #{cartNum}
    </delete>

    <!--장바구니창에서 수량만 변경-->
    <update id="updateCart">
        UPDATE SHOP_CART
        SET
            CART_CNT= #{cartCnt},
            TOTAL_PRICE = (SELECT PRICE
                        FROM BOOK
                        WHERE BOOK_NUM = #{bookNum}) * #{cartCnt}
        WHERE CART_NUM = #{cartNum}
    </update>

    <!--구매한 상품은 장바구니에서 삭제-->
    <delete id="deleteCartAll">
        DELETE FROM SHOP_CART
        WHERE CART_NUM IN
        <!--collection : 반복 돌릴 데이터(배열, 리스트)-->
        <!--item : 반복 돌릴 데이터에서 하나씩 뺀 데이터를 지칭하는 이름-->
        <!--separator : 한 번 반복될때마다 작성해야하는 쿼리 단어-->
        <!--open : 반복 되기 전에 딱 한 번만 작성해야하는 쿼리 단어-->
        <!--close : 반복 후 딱 한 번만 작성해야하는 쿼리 단어-->
        <foreach collection="cartNumList" item="cartNum" separator="," open="(" close=")">
            #{cartNum}
        </foreach>
    </delete>


</mapper>
































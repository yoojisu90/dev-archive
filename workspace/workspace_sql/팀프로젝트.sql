
SELECT * FROM EMP;

CREATE TABLE TEST_TABLE(
	NUM INT PRIMARY KEY,
	NAME VARCHAR(20)
);

SELECT * FROM test_table;

DROP TABLE SENSOR_DATA;


SELECT * FROM sensor_data;
SELECT * FROM board;
SELECT * FROM board_img;
SELECT * FROM member;
SELECT * FROM category;

SELECT
            MEM_ID
            , MEM_PW
            , MEM_NAME
            , MEM_ADDR
            , MEM_DETAIL_ADDR
            , MEM_TELL
            , MEM_EMAIL
            , MEM_GRADE
            , MEM_BUSINESS_NUM
            , MEM_BUSINESS_NAME
        FROM MEMBER
        WHERE MEM_ID = 'aaaa';

SELECT BOARD_NUM, TITLE, MEM_ID, CATE_NUM, READ_CNT, LIKE_CNT, DISLIKE_CNT, CREATE_DATE
        FROM BOARD
        ORDER BY (likeCnt + readCnt) DESC, lastActivityDate DESC
        LIMIT 10;



CREATE TABLE CROP_STANDARDS(
	HERB_NUM INT PRIMARY KEY AUTO_INCREMENT, #작물 ID
	HERB_NAME VARCHAR(50) NOT NULL, #작물 이름
	TEMP_MIN FLOAT NOT NULL, #최저 온도
	TEMP_MAX FLOAT NOT NULL, #최대 온도
	HUMID_MIN FLOAT NOT NULL, #최저 습도
	HUMID_MAX FLOAT NOT NULL, #최대 습도
	SOIL_MIN FLOAT NOT NULL, #최소 토양 수분
	SOIL_MAX FLOAT NOT NULL, #최대 토양 수분 
	LUX_MIN INT NOT NULL, #최소 조도
	LUX_MAX INT NOT NULL, #최대 조도
	IMG_NAME VARCHAR(100) NOT NULL #작물 이미지
);


INSERT INTO CROP_STANDARDS	(
	HERB_NAME, TEMP_MIN, TEMP_MAX, HUMID_MIN, HUMID_MAX, SOIL_MIN, SOIL_MAX, LUX_MIN, LUX_MAX, IMG_NAME
) VALUES
	('바질', 20, 30, 40, 60, 25, 40, 20000, 60000, '바질.jfjf'),
	('로즈마리', 15, 25, 30, 50, 10, 20, 30000, 70000, '로즈마리.jfjf'),
	('라벤더', 15, 25, 30, 50, 10, 20, 30000, 70000, '라벤더.jfjf'),
	('민트', 15, 25, 50, 70, 30, 45, 15000, 40000, '민트.jfjf'),
	('타임', 15, 25, 30, 50, 10, 20, 20000, 60000, '타임.jfjf'),
	('파슬리', 15, 25, 40, 60, 20, 35, 15000, 40000, '파슬리.jfjf'
);

SELECT * FROM CATEGORY;

DROP TABLE category;
CREATE TABLE CATEGORY (
	CATE_NUM INT AUTO_INCREMENT PRIMARY KEY
	,CATE_NAME VARCHAR(10) UNIQUE
);

INSERT INTO category VALUES(
	3,'정보공유'
);

CREATE TABLE BOARD (
	BOARD_NUM INT PRIMARY KEY AUTO_INCREMENT 
	,TITLE VARCHAR(50) NOT NULL
	,CONTENT VARCHAR(1000)
	,MEM_ID VARCHAR(50) NOT NULL REFERENCES MEMBER (MEM_ID)
	,CATE_NUM INT NOT NULL REFERENCES CATEGORY (CATE_NUM)
	,READ_CNT INT DEFAULT 0
	,LIKE_CNT INT DEFAULT 0
	,DISLIKE_CNT INT DEFAULT 0
	,CREATE_DATE DATETIME DEFAULT SYSDATE()
	,HERB_NUM INT REFERENCES CROP_STANDARDS (HERB_NUM)
);

CREATE TABLE BOARD_IMG(
	  IMG_NUM INT PRIMARY KEY AUTO_INCREMENT
	, ORIGIN_IMG_NAME VARCHAR(100) 			# 원본 파일명
	, ATTACHED_IMG_NAME VARCHAR(100) 		# 첨부된 파일명
	, BOARD_NUM INT REFERENCES BOARD(BOARD_NUM) ON DELETE CASCADE # 이미지의 원본 게시글 번호 
);


CREATE TABLE CATEGORY (
	CATE_NUM INT AUTO_INCREMENT PRIMARY KEY
	,CATE_NAME VARCHAR(10) UNIQUE
);

CREATE TABLE MEMBER(
	  MEM_ID VARCHAR(20) PRIMARY KEY
	, MEM_PW VARCHAR(20) NOT NULL
	, MEM_NAME VARCHAR(20) NOT NULL
	, MEM_ADDR VARCHAR(20) 
	, MEM_DETAIL_ADDR VARCHAR(20)
	, MEM_TELL VARCHAR(20) NOT NULL UNIQUE
	, MEM_EMAIL VARCHAR(20)
	, MEM_GRADE VARCHAR(20) NOT NULL DEFAULT 'USER'
	, JOIN_DATE DATETIME DEFAULT SYSDATE()
	, MEM_BUSINESS_NUM VARCHAR(20) UNIQUE
	, MEM_BUSINESS_NAME VARCHAR(20)
);


CREATE TABLE sensor_data(
	ENV_NUM INT PRIMARY KEY AUTO_INCREMENT,
	SENSOR_TIME DATETIME DEFAULT SYSDATE(),
	TEMPERATURE FLOAT,
	HUMIDITY FLOAT,
	ILLUMINANCE INT,
	SOIL_MOISTURE FLOAT,
	RASP_NUM VARCHAR(50) REFERENCES RASPBERRY(RASP_NUM)
);

CREATE TABLE RASPBERRY(
	RASP_NUM VARCHAR(50) PRIMARY KEY,
	MEM_ID VARCHAR(20) REFERENCES member(MEM_ID),
	HERB_NUM INT REFERENCES crop_standards(HERB_NUM)
);

INSERT INTO raspberry(
	RASP_NUM, MEM_ID, HERB_NUM
) VALUES(
	'10000000bebf3004', 'user', 1
);


INSERT INTO SENSOR_DATA (ENV_NUM, SENSOR_TIME, TEMPERATURE, HUMIDITY, ILLUMINANCE, SOIL_MOISTURE)
SELECT ENV_NUM, SENSOR_TIME, TEMPERATURE, HUMIDITY, ILLUMINANCE, SOIL_MOISTURE FROM IMSI;

SELECT * FROM sensor_data;
SELECT * FROM raspberry;
SELECT * FROM imsi;

SELECT
            HERB_NUM
            , HERB_NAME
            , TEMP_MIN
            , TEMP_MAX
            , HUMID_MIN
            , HUMID_MAX
            , SOIL_MIN
            , SOIL_MAX
            , LUX_MIN
            , LUX_MAX
            , IMG_NAME
        FROM crop_standards;
 commit;
 
 CREATE TABLE ACTUATOR_LOG (
    LOG_ID INT PRIMARY KEY AUTO_INCREMENT,
    ACT_NAME VARCHAR(50) NOT NULL,
    RASP_NUM VARCHAR(50),
    STATE ENUM('ON', 'OFF') NOT NULL,
    EVENT_TIME DATETIME DEFAULT SYSDATE(),
    FOREIGN KEY (RASP_NUM) REFERENCES raspberry (RASP_NUM)
);
 
 SELECT * FROM ACTUATOR_LOG;
 
CREATE TABLE MESSAGE (
	MSG_NUM INT PRIMARY KEY AUTO_INCREMENT,
	SENDER_ID VARCHAR(20) NOT NULL,
	RECEIVER_ID VARCHAR(20) NOT NULL,
	TITLE VARCHAR(200),                          
	CONTENT TEXT NOT NULL,                       
	IS_READ BOOLEAN DEFAULT FALSE,               
	IS_DELETED_BY_SENDER BOOLEAN DEFAULT FALSE,  
	IS_DELETED_BY_RECEIVER BOOLEAN DEFAULT FALSE,
	CREATED_AT DATETIME DEFAULT SYSDATE(),
	READ_AT DATETIME,
	                           
	FOREIGN KEY (SENDER_ID) REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE,
	FOREIGN KEY (RECEIVER_ID) REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE
);

COMMIT;




CREATE TABLE FOLLOW (
    FOLLOW_ID INT PRIMARY KEY AUTO_INCREMENT,
    FOLLOWER_ID VARCHAR(20) NOT NULL,
    FOLLOWING_ID VARCHAR(20) NOT NULL,
    FOLLOWED_AT DATETIME DEFAULT SYSDATE(),
    
    FOREIGN KEY (FOLLOWER_ID) REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE,
    FOREIGN KEY (FOLLOWING_ID) REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE,
    UNIQUE KEY unique_follow (FOLLOWER_ID, FOLLOWING_ID),
    CHECK (FOLLOWER_ID != FOLLOWING_ID)
);

CREATE TABLE CHAT_ROOM (
    ROOM_ID INT PRIMARY KEY AUTO_INCREMENT,
    ROOM_NAME VARCHAR(100),
    ROOM_TYPE ENUM('DIRECT', 'GROUP') NOT NULL,
    CREATED_AT DATETIME DEFAULT SYSDATE(),
    LAST_MESSAGE_AT DATETIME
);

CREATE TABLE CHAT_PARTICIPANT (
    PARTICIPANT_ID INT PRIMARY KEY AUTO_INCREMENT,
    ROOM_ID INT NOT NULL,
    MEM_ID VARCHAR(20) NOT NULL,
    JOINED_AT DATETIME DEFAULT SYSDATE(),
    LAST_READ_AT DATETIME,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    
    FOREIGN KEY (ROOM_ID) REFERENCES CHAT_ROOM(ROOM_ID) ON DELETE CASCADE,
    FOREIGN KEY (MEM_ID) REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE,
    UNIQUE KEY unique_room_member (ROOM_ID, MEM_ID)
);

CREATE TABLE CHAT_MESSAGE (
    MSG_ID INT PRIMARY KEY AUTO_INCREMENT,
    ROOM_ID INT NOT NULL,
    SENDER_ID VARCHAR(20) NOT NULL,
    MESSAGE_TYPE ENUM('TEXT', 'IMAGE', 'FILE') DEFAULT 'TEXT',
    CONTENT TEXT NOT NULL,
    FILE_URL VARCHAR(500),
    SENT_AT DATETIME DEFAULT SYSDATE(),
    IS_DELETED BOOLEAN DEFAULT FALSE,
    
    FOREIGN KEY (ROOM_ID) REFERENCES CHAT_ROOM(ROOM_ID) ON DELETE CASCADE,
    FOREIGN KEY (SENDER_ID) REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE,
    INDEX idx_room_sent (ROOM_ID, SENT_AT)
);

SELECT * FROM CHAT_ROOM;member_profilemember_profile`member`
SELECT * FROM chat_message;
SELECT * FROM member;
SELECT * FROM sensor_data;

INSERT INTO member_profile (MEM_ID, PROFILE_IMAGE_URL, PROFILE_IMAGE_NAME) 
VALUES ('kimfarm', '/upload/profile/kimfarm_1761623025859.jpeg', 'test.jpeg');

SELECT * FROM member_profile WHERE MEM_ID = 'kimfarm';

SELECT * FROM board_img;